module InfoIcon = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="16" height="16" viewBox="0 0 16 16" fill="none">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.00016 13.7684C11.1858 13.7684 13.7684 11.1858 13.7684 8.00016C13.7684 4.81448 11.1858 2.23197 8.00016 2.23197C4.81448 2.23197 2.23197 4.81448 2.23197 8.00016C2.23197 11.1858 4.81448 13.7684 8.00016 13.7684ZM8.00016 14.6668C11.6821 14.6668 14.6668 11.6821 14.6668 8.00016C14.6668 4.31826 11.6821 1.3335 8.00016 1.3335C4.31826 1.3335 1.3335 4.31826 1.3335 8.00016C1.3335 11.6821 4.31826 14.6668 8.00016 14.6668Z"
        fillOpacity="0.6"
      />
      <path
        d="M7.44956 5.37962H8.56658V6.39279H7.44956V5.37962ZM6.96389 9.78915H7.17435C7.28767 9.78915 7.36861 9.76048 7.41718 9.70313C7.46574 9.6394 7.49003 9.54382 7.49003 9.41638V8.314C7.49003 8.17381 7.46844 8.07186 7.42527 8.00813C7.3875 7.94441 7.30925 7.91255 7.19054 7.91255H6.96389V7.08099H8.55039V9.4355C8.55039 9.55657 8.57197 9.64578 8.61514 9.70313C8.66371 9.76048 8.74195 9.78915 8.84988 9.78915H9.06033V10.6207H6.96389V9.78915Z"
        fillOpacity="0.6"
      />
    </svg>
  }
}

module Search = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className fill="#35405240" viewBox="0 0 48 48" width="25px" height="25px">
      <path
        d="M 20.5 6 C 12.515556 6 6 12.515562 6 20.5 C 6 28.484438 12.515556 35 20.5 35 C 23.773158 35 26.788919 33.893018 29.220703 32.050781 L 38.585938 41.414062 A 2.0002 2.0002 0 1 0 41.414062 38.585938 L 32.050781 29.220703 C 33.893017 26.788918 35 23.773156 35 20.5 C 35 12.515562 28.484444 6 20.5 6 z M 20.5 10 C 26.322685 10 31 14.677319 31 20.5 C 31 23.295711 29.914065 25.820601 28.148438 27.697266 A 2.0002 2.0002 0 0 0 27.701172 28.144531 C 25.824103 29.912403 23.29771 31 20.5 31 C 14.677315 31 10 26.322681 10 20.5 C 10 14.677319 14.677315 10 20.5 10 z"
      />
    </svg>
  }
}

module Filter = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="12" height="12" viewBox="0 0 12 12" fill="none">
      <path
        d="M7.01525 5.4828L10.5229 1.19988H1.47689L5.02157 5.4828C5.09564 5.59343 5.1322 5.70453 5.1322 5.81514V9.65514L6.86752 10.5045V5.77856C6.86752 5.66793 6.94158 5.55683 7.01518 5.48325L7.01525 5.4828ZM11.8893 1.05216L7.82754 5.9628V11.2428C7.82754 11.6122 7.45816 11.8334 7.16284 11.6858L4.46752 10.3934C4.31986 10.3193 4.17221 10.1716 4.17221 9.9504V5.9628L0.110454 1.05216C-0.147822 0.756855 0.073423 0.276855 0.479826 0.276855H11.5198C11.9258 0.276855 12.1475 0.719823 11.8892 1.05216H11.8893Z"
        fill="#354052"
        fillOpacity="0.5"
      />
    </svg>
  }
}

module Delete = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    <svg ?className ?onClick width="15" height="15" viewBox="0 0 12 12" fill="none">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M5.99238 -1.52588e-05C9.30835 -1.52588e-05 12 2.67639 12 5.99236C12 9.30834 9.30835 12 5.99238 12C2.67641 12 0 9.30834 0 5.99236C0 2.67639 2.67641 -1.52588e-05 5.99238 -1.52588e-05ZM3.46459 3.95552L5.50194 5.99287L3.46459 8.03021L3.9551 8.53597L5.99244 6.49863L8.02979 8.53597L8.53555 8.03021L6.4982 5.99287L8.53555 3.95552L8.02979 3.46502L5.99244 5.50236L3.9551 3.46502L3.46459 3.95552Z"
        fill="#354052"
        fillOpacity="0.25"
      />
    </svg>
  }
}

module Tick = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="15" height="15" viewBox="0 0 11 9" fill="none">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.3135 1.70725L4.2425 7.77825C3.8515 8.16925 3.2185 8.16925 2.8285 7.77825L0.2925 5.24325C-0.0975 4.85225 -0.0975 4.21925 0.2925 3.82825C0.6835 3.43825 1.3165 3.43825 1.7065 3.82825L3.5355 5.65725L8.8995 0.29325C9.2895 -0.09775 9.9225 -0.09775 10.3135 0.29325C10.7045 0.68325 10.7045 1.31625 10.3135 1.70725Z"
        fill="#0099FF"
      />
    </svg>
  }
}

module DownArrow = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    let {isLightTheme} = ReactRedux.useSelector(store => store.app)
    if isLightTheme {
      <svg ?className ?onClick width="10" height="7" viewBox="0 0 10 6">
        <path
          d="M-0.000488281 1L4.99951 6L9.99951 1L9.11201 0.1125L4.99951 4.225L0.887012 0.1125L-0.000488281 1Z"
          fill="#354052"
          fillOpacity="0.4"
        />
      </svg>
    } else {
      <svg ?className ?onClick width="10" height="6" viewBox="0 0 10 6">
        <path
          d="M-0.000488281 1L4.99951 6L9.99951 1L9.11201 0.1125L4.99951 4.225L0.887012 0.1125L-0.000488281 1Z"
          fill="#F6F8F9"
          fillOpacity="0.8"
        />
      </svg>
    }
  }
}

module DropDownIcon = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="14" height="14" viewBox="0 0 14 14" fill="none">
      <path d="M3.5 5.8335L7 9.3335L10.5 5.8335" strokeLinecap="round" strokeLinejoin="round" />
    </svg>
  }
}

module CloseIcon = {
  @react.component
  let make = (~id: option<string>=?, ~className: option<string>=?, ~onClick=?, ~onMouseDown=?) => {
    let {isLightTheme} = ReactRedux.useSelector(store => store.app)

    <svg
      ?id
      ?className
      ?onClick
      height="20px"
      width="20px"
      version="1.1"
      viewBox="0 0 512 512"
      ?onMouseDown>
      <path
        d="M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z"
        fill={`${isLightTheme ? "" : "#F6F8F9"} `}
      />
    </svg>
  }
}

module RightArrowIcon = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="16" height="16" viewBox="0 0 16 16">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.00008 8.79604C4.00008 8.92865 4.05276 9.05583 4.14653 9.1496C4.2403 9.24336 4.36747 9.29604 4.50008 9.29604H10.2931L8.14608 11.442C8.09959 11.4885 8.06272 11.5437 8.03756 11.6045C8.0124 11.6652 7.99945 11.7303 7.99945 11.796C7.99945 11.8618 8.0124 11.9269 8.03756 11.9876C8.06272 12.0484 8.09959 12.1036 8.14608 12.15C8.19257 12.1965 8.24776 12.2334 8.3085 12.2586C8.36924 12.2837 8.43434 12.2967 8.50008 12.2967C8.56583 12.2967 8.63093 12.2837 8.69167 12.2586C8.75241 12.2334 8.80759 12.1965 8.85408 12.15L11.8541 9.15004C11.9006 9.1036 11.9376 9.04842 11.9628 8.98768C11.988 8.92693 12.001 8.86181 12.001 8.79604C12.001 8.73028 11.988 8.66515 11.9628 8.60441C11.9376 8.54366 11.9006 8.48849 11.8541 8.44204L8.85408 5.44204C8.7602 5.34816 8.63286 5.29541 8.50008 5.29541C8.36731 5.29541 8.23997 5.34816 8.14608 5.44204C8.0522 5.53593 7.99945 5.66327 7.99945 5.79604C7.99945 5.92882 8.0522 6.05616 8.14608 6.15004L10.2931 8.29604H4.50008C4.36747 8.29604 4.2403 8.34872 4.14653 8.44249C4.05276 8.53626 4.00008 8.66343 4.00008 8.79604Z"
      />
    </svg>
  }
}

module ClockIcon = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="12" height="11" viewBox="0 0 12 11">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6 1.11621C3.61827 1.11621 1.6875 3.04698 1.6875 5.42871C1.6875 7.81044 3.61827 9.74121 6 9.74121C8.38173 9.74121 10.3125 7.81044 10.3125 5.42871C10.3125 3.04698 8.38173 1.11621 6 1.11621ZM0.9375 5.42871C0.9375 2.63277 3.20406 0.366211 6 0.366211C8.79594 0.366211 11.0625 2.63277 11.0625 5.42871C11.0625 8.22465 8.79594 10.4912 6 10.4912C3.20406 10.4912 0.9375 8.22465 0.9375 5.42871ZM5.63416 2.32938H6.38416V5.07421H8.9908V5.82421H5.63416V2.32938Z"
      />
    </svg>
  }
}

module WarningExclamationIcon = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="13" height="12" viewBox="0 0 13 12">
      <path
        d="M6.33768 7.10673C6.45261 7.10673 6.56283 7.06108 6.64409 6.97981C6.72536 6.89855 6.77101 6.78833 6.77101 6.6734V4.66673C6.77101 4.5518 6.72536 4.44158 6.64409 4.36032C6.56283 4.27905 6.45261 4.2334 6.33768 4.2334C6.22275 4.2334 6.11253 4.27905 6.03127 4.36032C5.95 4.44158 5.90435 4.5518 5.90435 4.66673V6.66673C5.90346 6.7242 5.91402 6.78126 5.9354 6.83461C5.95678 6.88796 5.98856 6.93652 6.02889 6.97746C6.06921 7.01841 6.11728 7.05093 6.1703 7.07312C6.22331 7.09531 6.28021 7.10674 6.33768 7.10673Z"
      />
      <path
        d="M6.32129 8.58984C6.59743 8.58984 6.82129 8.36599 6.82129 8.08984C6.82129 7.8137 6.59743 7.58984 6.32129 7.58984C6.04515 7.58984 5.82129 7.8137 5.82129 8.08984C5.82129 8.36599 6.04515 8.58984 6.32129 8.58984Z"
      />
      <path
        d="M10.4481 8.51318L7.20145 2.53318C7.11549 2.37525 6.98855 2.24342 6.83397 2.15157C6.6794 2.05971 6.50292 2.01123 6.32312 2.01123C6.14331 2.01123 5.96683 2.05971 5.81226 2.15157C5.65769 2.24342 5.53074 2.37525 5.44478 2.53318L2.19478 8.51318C2.10972 8.66587 2.06616 8.83818 2.06845 9.01295C2.07073 9.18772 2.11879 9.35884 2.20782 9.50925C2.29685 9.65966 2.42375 9.7841 2.57586 9.87018C2.72798 9.95626 2.9 10.001 3.07478 9.99985H9.56812C9.74146 10 9.91188 9.9551 10.0626 9.86954C10.2134 9.78397 10.3393 9.66069 10.4281 9.51178C10.5168 9.36286 10.5653 9.19344 10.5688 9.02013C10.5723 8.84682 10.5307 8.67557 10.4481 8.52318V8.51318ZM9.85478 9.15985C9.82528 9.20961 9.78334 9.25083 9.73308 9.27947C9.68281 9.30811 9.62596 9.32317 9.56812 9.32318H3.07478C3.01684 9.32334 2.95986 9.30839 2.90946 9.27981C2.85905 9.25123 2.81697 9.21001 2.78736 9.16021C2.75775 9.11041 2.74163 9.05374 2.74059 8.99581C2.73956 8.93788 2.75364 8.88068 2.78145 8.82985L6.02812 2.84985C6.05668 2.79693 6.09902 2.75273 6.15066 2.72192C6.2023 2.69111 6.26132 2.67484 6.32145 2.67484C6.38158 2.67484 6.4406 2.69111 6.49224 2.72192C6.54388 2.75273 6.58622 2.79693 6.61478 2.84985L9.86145 8.82985C9.88908 8.8807 9.903 8.93787 9.90183 8.99573C9.90066 9.05359 9.88445 9.11015 9.85478 9.15985Z"
      />
    </svg>
  }
}

module JuspayLogo = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="56" height="12" viewBox="0 0 56 12">
      <g clipPath="url(#clip0_978_1489)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.99397 11.9985C5.70588 12.0065 5.4258 11.9825 5.13771 11.9425C4.36146 11.8305 3.63323 11.5826 2.96102 11.1747C1.47255 10.2789 0.520256 8.97519 0.128133 7.26361C0.0401049 6.8797 9.23331e-05 6.48779 9.23331e-05 6.09589C-0.00791018 4.52827 0.504251 3.1526 1.54458 1.98488C2.44886 0.977126 3.56921 0.361275 4.88963 0.105337C5.25774 0.0333547 5.62586 -0.00663564 5.99397 0.0093605C5.99397 0.609215 5.99397 1.20107 5.99397 1.80093C5.97797 1.80893 5.96196 1.81692 5.94596 1.83292C5.72989 1.98488 5.51382 2.14484 5.30576 2.3128C4.83361 2.69671 4.38547 3.10461 4.00935 3.59249C3.50519 4.24034 3.16909 4.95217 3.12107 5.79196C3.09706 6.19187 3.14508 6.58377 3.27312 6.95968C3.58522 7.89545 4.55352 8.86322 5.91395 8.88721C5.99397 8.88721 6.00998 8.90321 6.00998 8.99119C6.00198 9.39909 6.00198 10.2149 6.00198 10.2149C6.00198 10.2149 6.00198 10.2629 6.00198 10.2869C5.99397 10.8547 5.99397 11.4226 5.99397 11.9985Z"
          fill="#0099FF"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.99384 1.79279C5.99384 1.79279 5.99384 0.60108 5.99384 0.00122485C6.32194 -0.00677321 6.64205 0.0252191 6.96215 0.0732075C7.56233 0.169184 8.13851 0.345142 8.68269 0.625074C9.81104 1.20893 10.6993 2.04073 11.2995 3.17646C11.6436 3.8323 11.8677 4.52813 11.9557 5.25595C12.0597 6.11175 11.9797 6.95954 11.7236 7.78334C11.4275 8.71912 10.9314 9.54292 10.2352 10.2388C9.38691 11.0785 8.37859 11.6224 7.21022 11.8704C6.8101 11.9503 6.40197 11.9983 5.99384 11.9903C5.99384 11.4145 5.99384 10.8466 5.99384 10.2707C5.99384 10.2467 5.99384 10.2068 5.99384 10.2068C5.99384 10.2068 6.01785 10.1908 6.02585 10.1828C6.65005 9.74287 7.24223 9.26299 7.75439 8.68712C8.0905 8.31122 8.37859 7.91131 8.57865 7.44742C8.85874 6.79158 8.97078 6.11975 8.82673 5.40792C8.57065 4.11223 7.41029 3.14446 6.07387 3.11247C5.98584 3.11247 5.99384 3.04049 5.99384 3.04049V1.79279Z"
          fill="#0099FF"
        />
        <path
          d="M18.5196 7.87613C18.5196 8.21484 18.4639 8.53742 18.3605 8.85193C18.2571 9.16645 18.09 9.44064 17.8832 9.68257C17.6684 9.92451 17.4059 10.11 17.0877 10.2551C16.7695 10.3922 16.3956 10.4648 15.982 10.4648C15.3137 10.4648 14.7648 10.3035 14.3432 9.98902C13.9137 9.67451 13.6352 9.17451 13.5 8.48903L14.908 8.15032C14.9558 8.43258 15.0671 8.65838 15.2501 8.82774C15.4251 8.99709 15.6478 9.07774 15.9104 9.07774C16.3399 9.07774 16.6343 8.93258 16.7854 8.63419C16.9366 8.34387 17.0161 7.93258 17.0161 7.41646V1.68262H18.5196V7.87613Z"
        />
        <path
          d="M26.8086 7.10194C26.8086 7.61807 26.7211 8.08581 26.5461 8.4971C26.3711 8.91645 26.1324 9.26322 25.8301 9.55354C25.5278 9.84386 25.1699 10.0697 24.7562 10.2229C24.3425 10.3842 23.8891 10.4568 23.4039 10.4568C22.9186 10.4568 22.4652 10.3761 22.0595 10.2229C21.6458 10.0697 21.2878 9.84386 20.9776 9.55354C20.6673 9.26322 20.4287 8.90838 20.2616 8.4971C20.0866 8.08581 20.0071 7.61807 20.0071 7.10194V1.68262H21.5106V7.05356C21.5106 7.26323 21.5424 7.48097 21.606 7.71484C21.6697 7.94065 21.7731 8.15839 21.9242 8.35193C22.0674 8.54548 22.2663 8.70677 22.5129 8.82774C22.7515 8.95677 23.0538 9.01322 23.4118 9.01322C23.7698 9.01322 24.0721 8.94871 24.3107 8.82774C24.5494 8.70677 24.7483 8.54548 24.8994 8.35193C25.0426 8.15839 25.154 7.94871 25.2176 7.71484C25.2812 7.48097 25.3131 7.26323 25.3131 7.05356V1.68262H26.8165V7.10194H26.8086Z"
        />
        <path
          d="M32.5044 3.52128C32.3453 3.28741 32.1305 3.11806 31.868 3.00516C31.5975 2.89225 31.3191 2.84387 31.0247 2.84387C30.8497 2.84387 30.6827 2.86806 30.5156 2.90838C30.3486 2.94871 30.2054 3.01322 30.0781 3.10193C29.9429 3.19064 29.8395 3.30354 29.7599 3.4487C29.6804 3.59386 29.6406 3.75515 29.6406 3.9487C29.6406 4.23902 29.736 4.46483 29.9429 4.60999C30.1417 4.76321 30.3883 4.90031 30.6827 5.00515C30.977 5.11805 31.2952 5.23095 31.6452 5.33579C31.9953 5.44063 32.3135 5.58579 32.6157 5.77127C32.9101 5.95675 33.1567 6.20675 33.3556 6.50514C33.5544 6.81159 33.6578 7.22288 33.6578 7.72287C33.6578 8.18255 33.5783 8.58577 33.4112 8.92448C33.2442 9.27125 33.0214 9.55351 32.7351 9.77931C32.4487 10.0051 32.1225 10.1745 31.7486 10.2874C31.3748 10.4003 30.977 10.4567 30.5713 10.4567C30.0463 10.4567 29.5372 10.368 29.0599 10.1906C28.5746 10.0132 28.153 9.7148 27.803 9.29544L28.9405 8.18255C29.1235 8.4648 29.3622 8.68254 29.6644 8.84383C29.9667 9.00512 30.277 9.0777 30.6111 9.0777C30.7861 9.0777 30.9611 9.05351 31.1361 9.00512C31.3111 8.95674 31.4702 8.88416 31.6134 8.78738C31.7566 8.69061 31.868 8.56964 31.9555 8.41642C32.043 8.27126 32.0907 8.09384 32.0907 7.90029C32.0907 7.58578 31.9873 7.34384 31.7884 7.17449C31.5895 7.00514 31.3429 6.85997 31.0486 6.74707C30.7543 6.63417 30.4281 6.52127 30.0781 6.41643C29.7281 6.31159 29.4019 6.16643 29.1155 5.98901C28.8212 5.81159 28.5746 5.56966 28.3757 5.26321C28.1769 4.95676 28.0734 4.55354 28.0734 4.04547C28.0734 3.60193 28.161 3.2229 28.3439 2.90032C28.5189 2.57774 28.7576 2.31161 29.0519 2.09387C29.3383 1.8842 29.6724 1.72291 30.0463 1.61807C30.4202 1.51323 30.802 1.46484 31.1918 1.46484C31.6373 1.46484 32.0668 1.53742 32.4885 1.66646C32.9021 1.80355 33.284 2.02936 33.6181 2.34387L32.5044 3.52128Z"
        />
        <path
          d="M34.9147 1.68262H37.7546C38.1603 1.68262 38.5501 1.72294 38.932 1.80358C39.3058 1.88423 39.64 2.02132 39.9263 2.20681C40.2127 2.40036 40.4434 2.65035 40.6105 2.96487C40.7775 3.28745 40.865 3.68261 40.865 4.15841C40.865 4.69873 40.7696 5.13421 40.5866 5.46485C40.4036 5.7955 40.157 6.05356 39.8468 6.23098C39.5365 6.4084 39.1786 6.53743 38.7649 6.60194C38.3512 6.66646 37.9296 6.69872 37.4842 6.69872H36.4102V10.2471H34.9067V1.68262H34.9147ZM37.3251 5.40034C37.5398 5.40034 37.7626 5.39227 37.9933 5.37614C38.224 5.36002 38.4387 5.31163 38.6297 5.23098C38.8206 5.15034 38.9797 5.02937 39.107 4.86808C39.2263 4.70679 39.2899 4.48099 39.2899 4.19067C39.2899 3.92454 39.2342 3.71486 39.1229 3.55357C39.0115 3.39228 38.8683 3.27132 38.6933 3.19067C38.5183 3.10196 38.3194 3.05358 38.1046 3.02938C37.8899 3.00519 37.683 2.98906 37.4842 2.98906H36.4102V5.40034H37.3251Z"
        />
        <path
          d="M43.7528 1.68262H45.0495L48.6929 10.2471H46.9746L46.1871 8.28742H42.5278L41.7641 10.2471H40.0776L43.7528 1.68262ZM45.662 6.98097L44.3574 3.49712L43.0369 6.98097H45.662Z"
        />
        <path
          d="M50.5224 6.58582L47.3484 1.68262H49.2337L51.31 5.09389L53.4101 1.68262H55.1999L52.0259 6.58582V10.2551H50.5224V6.58582Z"
        />
      </g>
    </svg>
  }
}

module Alert = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    <svg ?className ?onClick width="60" height="60" viewBox="0 0 48 48" fill="none">
      <g clipPath="url(#clip0)">
        <path
          d="M46.8319 41.6377C48.3811 38.9637 48.3909 35.7766 46.8517 33.1124L31.3997 6.35275C29.8703 3.65902 27.1075 2.06055 24.0092 2.06055C20.9109 2.06055 18.1481 3.66889 16.6187 6.34289L1.14704 33.1322C-0.392233 35.8259 -0.382366 39.0327 1.17664 41.7067C2.71592 44.3511 5.46885 45.9397 8.5474 45.9397H39.4118C42.5003 45.9397 45.2729 44.3314 46.8319 41.6377Z"
          fill="#CB861E"
        />
        <mask id="mask0" mask="alpha" maskUnits="userSpaceOnUse" x="0" y="2" width="48" height="44">
          <path
            d="M46.8319 41.6377C48.3811 38.9637 48.3909 35.7766 46.8517 33.1124L31.3997 6.35275C29.8703 3.65902 27.1075 2.06055 24.0092 2.06055C20.9109 2.06055 18.1481 3.66889 16.6187 6.34289L1.14704 33.1322C-0.392233 35.8259 -0.382366 39.0327 1.17664 41.7067C2.71592 44.3511 5.46885 45.9397 8.5474 45.9397H39.4118C42.5003 45.9397 45.2729 44.3314 46.8319 41.6377Z"
            fill="#EA6E63"
          />
        </mask>
        <g mask="url(#mask0)">
          <path
            d="M43.0819 39.3877C44.6311 36.7137 44.6409 33.5266 43.1017 30.8624L27.6497 4.10275C26.1203 1.40902 23.3575 -0.189453 20.2592 -0.189453C17.1609 -0.189453 14.3981 1.41889 12.8687 4.09289L-2.60296 30.8822C-4.14223 33.5759 -4.13237 36.7827 -2.57336 39.4567C-1.03408 42.1011 1.71885 43.6897 4.7974 43.6897H35.6618C38.7503 43.6897 41.5229 42.0814 43.0819 39.3877Z"
            fill="#E89519"
          />
        </g>
        <path
          d="M23.9993 32.8955C22.6574 32.8955 21.5325 34.0204 21.5325 35.3623C21.5325 36.7042 22.6574 37.8291 23.9993 37.8291C25.2919 37.8291 26.4661 36.7042 26.4069 35.4215C26.4661 34.0105 25.3511 32.8955 23.9993 32.8955Z"
          fill="white"
        />
        <path
          d="M23.3876 15.5784C22.2134 15.9139 21.4832 16.9796 21.4832 18.2722C21.5424 19.0517 21.5918 19.841 21.651 20.6205C21.8187 23.5906 21.9864 26.5014 22.1542 29.4714C22.2134 30.4778 22.9929 31.208 23.9993 31.208C25.0058 31.208 25.7952 30.4285 25.8445 29.4122C25.8445 28.8004 25.8445 28.238 25.9037 27.6163C26.0122 25.712 26.1306 23.8076 26.2392 21.9033C26.2984 20.6699 26.4069 19.4365 26.4661 18.2031C26.4661 17.7591 26.4069 17.3644 26.2392 16.9697C25.736 15.8646 24.5618 15.3022 23.3876 15.5784Z"
          fill="white"
        />
      </g>
      <defs> <clipPath id="clip0"> <rect width="48" height="48" fill="white" /> </clipPath> </defs>
    </svg>
  }
}

module VideoResource = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="14" height="18" viewBox="0 0 14 18" fill="none">
      <path
        d="M12.6854 4.70387L12.3427 5.06797L12.6854 4.70387ZM9.03879 1.2718L9.38147 0.9077L9.03879 1.2718ZM5.75725 12.7957L5.5 12.3669L5.75725 12.7957ZM9.23772 9.83074L8.99676 10.2689L9.23772 9.83074ZM9.254 10.6976L9.51125 11.1263L9.254 10.6976ZM5.74096 7.90753L5.98192 7.46942L5.74096 7.90753ZM2 1.5H8.35342V0.5H2V1.5ZM12 16.5H2V17.5H12V16.5ZM1.5 16V2H0.5V16H1.5ZM8.69611 1.6359L12.3427 5.06797L13.028 4.33977L9.38147 0.9077L8.69611 1.6359ZM12.5 5.43207V16H13.5V5.43207H12.5ZM12.3427 5.06797C12.4431 5.16246 12.5 5.29421 12.5 5.43207H13.5C13.5 5.01848 13.3292 4.62324 13.028 4.33977L12.3427 5.06797ZM2 16.5C1.72386 16.5 1.5 16.2761 1.5 16H0.5C0.5 16.8284 1.17157 17.5 2 17.5V16.5ZM12 17.5C12.8284 17.5 13.5 16.8284 13.5 16H12.5C12.5 16.2761 12.2761 16.5 12 16.5V17.5ZM8.35342 1.5C8.48079 1.5 8.60336 1.54861 8.69611 1.6359L9.38147 0.9077C9.10322 0.645821 8.73552 0.5 8.35342 0.5V1.5ZM2 0.5C1.17157 0.5 0.5 1.17157 0.5 2H1.5C1.5 1.72386 1.72386 1.5 2 1.5V0.5ZM5.5 8.34564L8.99676 10.2689L9.47867 9.39264L5.98192 7.46942L5.5 8.34564ZM8.99676 10.2689L5.5 12.3669L6.0145 13.2244L9.51125 11.1263L8.99676 10.2689ZM5.5 12.3669V8.34564H4.5V12.3669H5.5ZM5.5 12.3669L5.5 12.3669H4.5C4.5 13.1442 5.34797 13.6243 6.0145 13.2244L5.5 12.3669ZM8.99676 10.2689H8.99676L9.51125 11.1263C10.1728 10.7294 10.1547 9.76446 9.47867 9.39264L8.99676 10.2689ZM5.98192 7.46942C5.31547 7.10287 4.5 7.58503 4.5 8.34564H5.5L5.98192 7.46942Z"
        fill="#D17F7F"
      />
    </svg>
  }
}

module AssetResource = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="14" height="18" viewBox="0 0 14 18" fill="none">
      <path
        d="M12.6854 4.70387L12.3427 5.06797L12.6854 4.70387ZM9.03879 1.2718L9.38147 0.9077L9.03879 1.2718ZM2 1.5H8.35342V0.5H2V1.5ZM12 16.5H2V17.5H12V16.5ZM1.5 16V2H0.5V16H1.5ZM8.69611 1.6359L12.3427 5.06797L13.028 4.33977L9.38147 0.9077L8.69611 1.6359ZM12.5 5.43207V16H13.5V5.43207H12.5ZM12.3427 5.06797C12.4431 5.16246 12.5 5.29421 12.5 5.43207H13.5C13.5 5.01848 13.3292 4.62324 13.028 4.33977L12.3427 5.06797ZM2 16.5C1.72386 16.5 1.5 16.2761 1.5 16H0.5C0.5 16.8284 1.17157 17.5 2 17.5V16.5ZM12 17.5C12.8284 17.5 13.5 16.8284 13.5 16H12.5C12.5 16.2761 12.2761 16.5 12 16.5V17.5ZM8.35342 1.5C8.48079 1.5 8.60336 1.54861 8.69611 1.6359L9.38147 0.9077C9.10322 0.645821 8.73552 0.5 8.35342 0.5V1.5ZM2 0.5C1.17157 0.5 0.5 1.17157 0.5 2H1.5C1.5 1.72386 1.72386 1.5 2 1.5V0.5Z"
        fill="#0099FF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7.26928 7.23975C7.26928 7.10167 7.38121 6.98975 7.51928 6.98975H9.74625C9.88432 6.98975 9.99625 7.10167 9.99625 7.23975V9.28114C9.99625 9.41921 9.88432 9.53114 9.74625 9.53114C9.60818 9.53114 9.49625 9.41921 9.49625 9.28114V7.8433L7.19086 10.1487C7.09323 10.2463 6.93494 10.2463 6.83731 10.1487C6.73968 10.0511 6.73968 9.89277 6.83731 9.79514L9.1427 7.48975H7.51928C7.38121 7.48975 7.26928 7.37782 7.26928 7.23975ZM4.00293 8.57308C4.00293 8.25091 4.2641 7.98975 4.58626 7.98975H5.92449C6.06256 7.98975 6.17449 8.10168 6.17449 8.23975C6.17449 8.37782 6.06256 8.48975 5.92449 8.48975H4.58626C4.54024 8.48975 4.50293 8.52706 4.50293 8.57308V12.4268C4.50293 12.4729 4.54024 12.5102 4.58626 12.5102H8.41293C8.45895 12.5102 8.49626 12.4729 8.49626 12.4268L8.49625 11.0573C8.49625 10.9193 8.60818 10.8073 8.74625 10.8073C8.88432 10.8073 8.99625 10.9193 8.99625 11.0573L8.99626 12.4268C8.99626 12.749 8.7351 13.0102 8.41293 13.0102H4.58626C4.2641 13.0102 4.00293 12.749 4.00293 12.4268V8.57308Z"
        fill="#0099FF"
        stroke="#0099FF"
        strokeWidth="0.3"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  }
}

module DocResource = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="14" height="18" viewBox="0 0 14 18" fill="none">
      <path
        d="M12.6854 4.70387L12.3427 5.06797L12.6854 4.70387ZM9.03879 1.2718L9.38147 0.9077L9.03879 1.2718ZM2 1.5H8.35342V0.5H2V1.5ZM12 16.5H2V17.5H12V16.5ZM1.5 16V2H0.5V16H1.5ZM8.69611 1.6359L12.3427 5.06797L13.028 4.33977L9.38147 0.9077L8.69611 1.6359ZM12.5 5.43207V16H13.5V5.43207H12.5ZM12.3427 5.06797C12.4431 5.16246 12.5 5.29421 12.5 5.43207H13.5C13.5 5.01848 13.3292 4.62324 13.028 4.33977L12.3427 5.06797ZM2 16.5C1.72386 16.5 1.5 16.2761 1.5 16H0.5C0.5 16.8284 1.17157 17.5 2 17.5V16.5ZM12 17.5C12.8284 17.5 13.5 16.8284 13.5 16H12.5C12.5 16.2761 12.2761 16.5 12 16.5V17.5ZM8.35342 1.5C8.48079 1.5 8.60336 1.54861 8.69611 1.6359L9.38147 0.9077C9.10322 0.645821 8.73552 0.5 8.35342 0.5V1.5ZM2 0.5C1.17157 0.5 0.5 1.17157 0.5 2H1.5C1.5 1.72386 1.72386 1.5 2 1.5V0.5ZM3.5 8H7V7H3.5V8ZM3.5 9.75H10.5V8.75H3.5V9.75ZM3.5 11.25H10.5V10.25H3.5V11.25ZM3.5 12.75H10.5V11.75H3.5V12.75ZM3.5 14.25H10.5V13.25H3.5V14.25Z"
        fill="#CF7FD1"
      />
    </svg>
  }
}

module GreenTick = {
  @react.component
  let make = (~className: option<string>=?) => {
    <svg ?className width="13" height="12" viewBox="0 0 13 12" fill="none">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.52958 2.87648C9.60928 2.79554 9.71814 2.74997 9.83173 2.75L9.83778 2.75C9.95138 2.75003 10.0602 2.79565 10.1399 2.87663L10.2286 2.9668C10.3066 3.04609 10.3503 3.15286 10.3503 3.26409V3.27005C10.3503 3.38127 10.3066 3.48804 10.2286 3.56733L4.76274 9.12338C4.68304 9.20439 4.57416 9.25001 4.46052 9.25L4.45446 9.25C4.34084 9.24999 4.23198 9.20437 4.1523 9.12338L1.98695 6.9223C1.90895 6.84301 1.86523 6.73624 1.86523 6.62501V6.61906C1.86523 6.50783 1.90895 6.40106 1.98695 6.32177L2.0759 6.23135C2.15552 6.15042 2.26429 6.1048 2.37782 6.10473L2.38387 6.10473C2.49742 6.10465 2.60625 6.15014 2.68597 6.23098L4.45752 8.02736L9.52958 2.87648Z"
        fill="#259430"
      />
    </svg>
  }
}

module SortDefault = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    let {isLightTheme} = ReactRedux.useSelector(store => store.app)
    <svg ?className ?onClick width="12" height="18" viewBox="0 0 12 18" fill="none">
      <mask id="mask0" mask="alpha" maskUnits="userSpaceOnUse" x="2" y="7" width="8" height="8">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.81791 10.6464C2.62265 10.8417 2.62265 11.1583 2.81791 11.3536L5.64634 14.182C5.8416 14.3772 6.15818 14.3772 6.35344 14.182L9.18187 11.3536C9.37713 11.1583 9.37713 10.8417 9.18187 10.6464C8.98661 10.4512 8.67002 10.4512 8.47476 10.6464L5.99989 13.1213L3.52502 10.6464C3.32975 10.4512 3.01317 10.4512 2.81791 10.6464Z"
          fill={isLightTheme ? "#A8AAB7" : "#f6f8f9"}
        />
      </mask>
      <g mask="url(#mask0)">
        <rect
          x="12.4644"
          y="6"
          width="12"
          height="12"
          transform="rotate(90 12.4644 6)"
          fill={isLightTheme ? "#354052" : "#f6f8f9"}
          fillOpacity={isLightTheme ? "0.5" : "0.6"}
        />
      </g>
      <mask id="mask1" mask="alpha" maskUnits="userSpaceOnUse" x="2" y="3" width="8" height="8">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.81791 7.35355C2.62265 7.15829 2.62265 6.84171 2.81791 6.64645L5.64634 3.81802C5.8416 3.62276 6.15818 3.62276 6.35344 3.81802L9.18187 6.64645C9.37713 6.84171 9.37713 7.15829 9.18187 7.35355C8.98661 7.54882 8.67002 7.54882 8.47476 7.35355L5.99989 4.87868L3.52502 7.35355C3.32975 7.54882 3.01317 7.54882 2.81791 7.35355Z"
          fill={isLightTheme ? "#A8AAB7" : "#f6f8f9"}
        />
      </mask>
      <g mask="url(#mask1)">
        <rect
          width="12"
          height="12"
          transform="matrix(0 -1 -1 0 12.4644 12)"
          fill={isLightTheme ? "#354052" : "#f6f8f9"}
          fillOpacity={isLightTheme ? "0.5" : "0.6"}
        />
      </g>
    </svg>
  }
}

module SortASC = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    <svg ?className ?onClick width="10" height="7" viewBox="0 0 10 7" fill="none">
      <path
        d="M1.2152 6.78125H8.78454C9.14912 6.78125 9.27054 6.52593 9.07979 6.21626L5.29529 0.40093C5.23637 0.29292 5.12699 0.22627 5.00883 0.22627C4.89034 0.22627 4.78096 0.29292 4.72237 0.40093L0.920286 6.21626C0.729202 6.52593 0.850624 6.78125 1.21521 6.78125H1.2152Z"
        fill="#0099FF"
      />
    </svg>
  }
}

module SortDESC = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?) => {
    <svg ?className ?onClick width="10" height="7" viewBox="0 0 10 7" fill="none">
      <path
        d="M1.2152 0.21875H8.78454C9.14912 0.21875 9.27054 0.474075 9.07979 0.783737L5.29529 6.59907C5.23637 6.70708 5.12699 6.77373 5.00883 6.77373C4.89034 6.77373 4.78096 6.70708 4.72237 6.59907L0.920286 0.783737C0.729202 0.474066 0.850624 0.21875 1.21521 0.21875H1.2152Z"
        fill="#0099FF"
      />
    </svg>
  }
}

module Cross = {
  @react.component
  let make = (~className: option<string>=?, ~onClick=?, ~id=?) => {
    let {isLightTheme} = ReactRedux.useSelector(store => store.app)
    if isLightTheme {
      <svg width="8" height="8" viewBox="0 0 8 8" fill="none" ?className ?onClick ?id>
        <path
          d="M0.710668 0.616891C0.785512 0.542047 0.887023 0.5 0.992869 0.5H0.99914C1.10499 0.5 1.2065 0.542047 1.28134 0.616891L4 3.33555L6.71866 0.616891C6.79351 0.542047 6.89502 0.5 7.00086 0.5H7.00713C7.11298 0.5 7.21449 0.542047 7.28933 0.616892L7.38311 0.710668C7.45795 0.785512 7.5 0.887023 7.5 0.992868V0.999139C7.5 1.10498 7.45795 1.2065 7.38311 1.28134L4.66445 4L7.38311 6.71866C7.45795 6.79351 7.5 6.89502 7.5 7.00086V7.00713C7.5 7.11298 7.45795 7.21449 7.38311 7.28933L7.28933 7.38311C7.21449 7.45795 7.11298 7.5 7.00713 7.5H7.00086C6.89502 7.5 6.79351 7.45795 6.71866 7.38311L4 4.66445L1.28134 7.38311C1.2065 7.45795 1.10498 7.5 0.999139 7.5H0.992868C0.887023 7.5 0.785512 7.45795 0.710668 7.38311L0.616892 7.28933C0.542047 7.21449 0.5 7.11298 0.5 7.00713V7.00086C0.5 6.89502 0.542047 6.79351 0.616891 6.71866L3.33555 4L0.616891 1.28134C0.542047 1.2065 0.5 1.10499 0.5 0.99914V0.992869C0.5 0.887023 0.542047 0.785512 0.616891 0.710668L0.710668 0.616891ZM7.00713 0.905362V0.899091L7.004 0.902227"
          fill="#354052"
        />
      </svg>
    } else {
      <svg width="8" height="8" viewBox="0 0 8 8" fill="none" ?className ?onClick ?id>
        <path
          d="M0.710668 0.616891C0.785512 0.542047 0.887023 0.5 0.992869 0.5H0.99914C1.10499 0.5 1.2065 0.542047 1.28134 0.616891L4 3.33555L6.71866 0.616891C6.79351 0.542047 6.89502 0.5 7.00086 0.5H7.00713C7.11298 0.5 7.21449 0.542047 7.28933 0.616892L7.38311 0.710668C7.45795 0.785512 7.5 0.887023 7.5 0.992868V0.999139C7.5 1.10498 7.45795 1.2065 7.38311 1.28134L4.66445 4L7.38311 6.71866C7.45795 6.79351 7.5 6.89502 7.5 7.00086V7.00713C7.5 7.11298 7.45795 7.21449 7.38311 7.28933L7.28933 7.38311C7.21449 7.45795 7.11298 7.5 7.00713 7.5H7.00086C6.89502 7.5 6.79351 7.45795 6.71866 7.38311L4 4.66445L1.28134 7.38311C1.2065 7.45795 1.10498 7.5 0.999139 7.5H0.992868C0.887023 7.5 0.785512 7.45795 0.710668 7.38311L0.616892 7.28933C0.542047 7.21449 0.5 7.11298 0.5 7.00713V7.00086C0.5 6.89502 0.542047 6.79351 0.616891 6.71866L3.33555 4L0.616891 1.28134C0.542047 1.2065 0.5 1.10499 0.5 0.99914V0.992869C0.5 0.887023 0.542047 0.785512 0.616891 0.710668L0.710668 0.616891ZM7.00713 0.905362V0.899091L7.004 0.902227"
          fill="#F6F8F9"
        />
      </svg>
    }
  }
}
